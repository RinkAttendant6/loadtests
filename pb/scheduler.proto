syntax = "proto3";

option go_package = "pb";

package loadtests;

service Scheduler {
    rpc LoadTest(LoadTestReq) returns (stream LoadTestResp) {};
    rpc RegisterExecutor(RegisterExecutorReq) returns (RegisterExecutorResp) {};
}

message LoadTestReq {
    string url                          = 1;
    string script                       = 2;
    string script_name                  = 3;
    int32  run_time                     = 4;
    double growth_factor                = 8;
    double time_between_growth          = 9;
    int32  starting_requests_per_second = 10;
    int32  max_requests_per_second      = 11;
    string script_config                = 12;
}

message LoadTestResp {
    message Preparing {
        int32 count = 1;
    };
    message Started {};
    message Finished {};
    message Errored {
        string error = 1;
    };
    oneof phase {
        Preparing preparing = 1;
        Started  start  = 2;
        Finished finish = 3;
        Errored  error  = 4;
    }
}

message RegisterExecutorReq {
    int64 droplet_id = 1;
    int64 port       = 2;

}

message RegisterExecutorResp {
    string influx_addr = 1;
    string influx_username = 2;
    string influx_password = 3;
    string influx_db       = 4;
    bool   influx_ssl      = 5;
}
